trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
  paths:
    exclude:
    - CHANGELOG.md
    - LICENSE
    - README.md

stages:
- stage: Test
  jobs:

  - job: Test_Linux
    pool:
      vmImage: ubuntu-18.04
    strategy:
      matrix:
        Python27:
          python.version: 2.7
        Python35:
          python.version: 3.5
        Python36:
          python.version: 3.6
        Python37:
          python.version: 3.7
        Python38:
          python.version: 3.7

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)

    - script: |
        echo "Installing baseline pip packages"
        python -m pip install setuptools wheel coverage twine -c tests/constraints.txt
        python -m pip install --upgrade pip setuptools wheel coverage -c test/constraints.txt

        echo "Installing test requirements"
        python -m pip install -r requirements-test.txt -c tests/constraints.txt

        echo "Installing package"
        python -m pip install . -c tests/constraints.txt
      displayName: Install

    - script: |
        python -m pycodestyle . --verbose --show-source --statistics
      displayName: Lint

    - script: |
        python -m py.test -v --cov spnego --cov-report term-missing
      displayName: Test

    - script: |
        bash <(curl -s https://codecov.io/bash)
      displayName: Upload to codecov.io
      condition: succeededOrFailed()

  - job: Test_Windows
    pool:
      vmImage: windows-2019
    strategy:
      matrix:
        # Need to fix NegotiateFlags being greater than a C long size.
        #Python27-x86:
        #  python.version: 2.7
        #  python.arch: x86
        #Python27-x64:
        #  python.version: 2.7
        #  python.arch: x64
        Python35-x64:
          python.version: 3.5
          python.arch: x64
        Python36-x64:
          python.version: 3.6
          python.arch: x64
        Python37-x64:
          python.version: 3.7
          python.arch: x64
        Python38-x86:
          python.version: 3.8
          python.arch: x86
        Python38-x64:
          python.version: 3.8
          python.arch: x64

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)
        architecture: $(python.arch)

    - script: |
        choco.exe install vcpython27 --yes --no-progress
      displayName: Install Python C++ build tools
      condition: eq(variables['python.version'], '2.7')

    - script: |
        echo "Installing baseline pip packages"
        python -m pip install setuptools wheel coverage cython
        python -m pip install --upgrade pip setuptools wheel coverage

        echo "Installing test requirements"
        python -m pip install -r requirements-test.txt -c tests/constraints.txt

        echo "Installing package"
        python -m pip install .
      displayName: Install

    - script: |
        python -m pycodestyle . --verbose --show-source --statistics
      displayName: Lint

    - script: |
        python -m py.test -v --cov spnego --cov-report term-missing
      displayName: Test

    - script: |
        choco.exe install codecov --yes --no-progress
        dir
        codecov.exe
      displayName: Upload to codecov.io
      condition: succeededOrFailed()

- stage: Build
  jobs:

  - job: Build
    pool:
      vmImage: $(image.name)
    strategy:
      matrix:
        Linux:
          image.name: ubuntu-18.04
          python.version: 3.8
          python.arch: x64
        Windows-38-x86:
          image.name: windows-2019
          python.version: 3.8
          python.arch: x86
        Windows-38-x64:
          image.name: windows-2019
          python.version: 3.8
          python.arch: x64

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)
        architecture: $(python.arch)

    - script: |
        python -m pip install cython twine wheel -c tests/constraints.txt
      displayName: Install build requirements

    - script: |
        python setup.py bdist_wheel
      displayName: Build wheel

    - task: TwineAuthenticate@1
      displayName: Twine Authenticate
      inputs:
        artifactFeed: jborean93/pyspnego

    - script: |
        python -m twine upload -r pyspnego --config-file $(PYPIRC_PATH) dist/*.whl
      displayName: Upload wheel to Azure Artifacts
