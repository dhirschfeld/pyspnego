trigger:
  branches:
    include:
    - main
  tags:
    include:
    - v*
  paths:
    exclude:
    - CHANGELOG.md
    - LICENSE
    - README.md

stages:
- stage: Test
  jobs:

  - job: Test_Linux
    pool:
      vmImage: ubuntu-18.04
    variables:
      test_realm: domain.test
    strategy:
      matrix:
        Python27:
          python.version: 2.7
        Python35:
          python.version: 3.5
        Python36:
          python.version: 3.6
        Python37:
          python.version: 3.7
        Python38:
          python.version: 3.7

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)

    - script: |
        sudo bash ci/setup.sh $(test_realm)
      displayName: Install system requirements

    - script: |
        echo "Installing baseline pip packages"
        python -m pip install --upgrade pip setuptools wheel coverage -c tests/constraints.txt

        echo "Installing test requirements"
        python -m pip install -r requirements-test.txt -c tests/constraints.txt

        echo "Installing package"
        python -m pip install . -c tests/constraints.txt
      displayName: Install

    - script: |
        python -m pycodestyle . --verbose --show-source --statistics
      displayName: Lint

    - script: |
        export PYSPNEGO_TEST_REALM=$(test_realm)
        pytest -v --junitxml junit/test-results.xml --cov spnego --cov-report xml --cov-report term-missing
      displayName: Test

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: $(Agent.OS) - $(Build.BuildNumber) - Python $(python.version)
      displayName: Publish test results
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml

    - script: |
        bash <(curl -s https://codecov.io/bash)
      displayName: Upload to codecov.io
      continueOnError: true
      timeoutInMinutes: 3

  - job: Test_Windows
    pool:
      vmImage: windows-2019
    strategy:
      matrix:
        Python27-x86:
          python.version: 2.7
          python.arch: x86
        Python27-x64:
          python.version: 2.7
          python.arch: x64
        Python35-x86:
          python.version: 3.5
          python.arch: x86
        Python35-x64:
          python.version: 3.5
          python.arch: x64
        Python36-x86:
          python.version: 3.6
          python.arch: x86
        Python36-x64:
          python.version: 3.6
          python.arch: x64
        Python37-x86:
          python.version: 3.7
          python.arch: x86
        Python37-x64:
          python.version: 3.7
          python.arch: x64
        Python38-x86:
          python.version: 3.8
          python.arch: x86
        Python38-x64:
          python.version: 3.8
          python.arch: x64

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)
        architecture: $(python.arch)

    - script: |
        choco.exe install vcpython27 --yes --no-progress
      displayName: Install Python C++ build tools
      condition: eq(variables['python.version'], '2.7')

    - script: |
        echo "Installing baseline pip packages"
        python -m pip install --upgrade pip setuptools wheel coverage -c tests/constraints.txt

        echo "Installing test requirements"
        python -m pip install -r requirements-test.txt -c tests/constraints.txt

        echo "Installing package"
        python setup.py clean --all build_ext --force --inplace --define CYTHON_TRACE_NOGIL --cython-linetrace
        python -m pip install . -c tests/constraints.txt
      displayName: Install

    - script: |
        python -m pycodestyle . --verbose --show-source --statistics
      displayName: Lint

    - script: |
        pytest -v --junitxml junit/test-results.xml --cov spnego --cov-report xml --cov-report term-missing
      displayName: Test

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: $(Agent.OS) - $(Build.BuildNumber) - Python $(python.version) $(python.arch)
      displayName: Publish test results
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml

    - script: |
        choco.exe install codecov --yes --no-progress
        codecov.exe -f coverage.xml
      displayName: Upload to codecov.io
      continueOnError: true
      timeoutInMinutes: 3

#- stage: Build
#  jobs:
#
#  - job: Build
#    pool:
#      vmImage: $(image.name)
#    strategy:
#      matrix:
#        Linux:
#          image.name: ubuntu-18.04
#          python.version: 3.8
#          python.arch: x64
#          wheel.args: --universal
#        Windows-38-x86:
#          image.name: windows-2019
#          python.version: 3.8
#          python.arch: x86
#          wheel.args: ''
#        Windows-38-x64:
#          image.name: windows-2019
#          python.version: 3.8
#          python.arch: x64
#          wheel.args: ''
#
#    steps:
#    - task: UsePythonVersion@0
#      inputs:
#        versionSpec: $(python.version)
#        architecture: $(python.arch)
#
#    - script: |
#        python -m pip install cython twine wheel -c tests/constraints.txt
#      displayName: Install build requirements
#
#    - script: |
#        python setup.py bdist_wheel $(wheel.args)
#      displayName: Build wheel
#
#    - task: TwineAuthenticate@1
#      displayName: Twine Authenticate
#      inputs:
#        artifactFeed: jborean93/jborean93
#
#    - script: |
#        python -m twine upload -r jborean93 --config-file $(PYPIRC_PATH) dist/*.whl
#      displayName: Upload wheel to Azure Artifacts
